[{"path":"https://johnpaulgosling.github.io/AddiVortes/articles/introduction.html","id":"loading-the-package-and-data","dir":"Articles","previous_headings":"","what":"1. Loading the Package and Data","title":"Introduction to AddiVortes","text":"First, load AddiVortes package. example, use well-known Boston Housing dataset.","code":"# Load the package require(AddiVortes)  # Load the Boston Housing dataset from a URL Boston <- read.csv(paste0(\"https://raw.githubusercontent.com/anonymous2738/\",                           \"AddiVortesAlgorithm/DataSets/BostonHousing_Data.csv\"))   # Separate predictors (X) and the response variable (Y) X_Boston <- as.matrix(Boston[, 2:14]) Y_Boston <- as.numeric(as.matrix(Boston[, 15]))  # Clean up the environment rm(Boston)"},{"path":"https://johnpaulgosling.github.io/AddiVortes/articles/introduction.html","id":"preparing-the-data","dir":"Articles","previous_headings":"","what":"2. Preparing the Data","title":"Introduction to AddiVortes","text":"evaluate model’s performance, need split data training set testing set. use standard 5/6 split training 1/6 testing.","code":"n <- length(Y_Boston)  # Set a seed for reproducibility set.seed(1025)  # Create a training set containing 5/6 of the data TrainSet <- sort(sample.int(n, 5 * n / 6))  # The remaining data will be our test set TestSet <- setdiff(1:n, TrainSet)"},{"path":"https://johnpaulgosling.github.io/AddiVortes/articles/introduction.html","id":"training-the-model","dir":"Articles","previous_headings":"","what":"3. Training the Model","title":"Introduction to AddiVortes","text":"Now can run main AddiVortes function training data. specify several parameters algorithm, number iterations trees.","code":"# Run the AddiVortes algorithm on the training data results <- AddiVortes(y = Y_Boston[TrainSet],                        x = X_Boston[TrainSet, ],                       m = 200,                        totalMCMCIter = 2000,                        mcmcBurnIn = 200,                        nu = 6,                        q = 0.85,                        k = 3,                        sd = 0.8,                        omega = 3,                        lambdaRate = 25,                       IntialSigma = \"Linear\" )"},{"path":"https://johnpaulgosling.github.io/AddiVortes/articles/introduction.html","id":"making-predictions-and-evaluating-performance","dir":"Articles","previous_headings":"","what":"4. Making Predictions and Evaluating Performance","title":"Introduction to AddiVortes","text":"trained model object, can now make predictions unseen test data. calculate Root Mean Squared Error (RMSE) see well model performed.","code":"# Generate predictions on the test set preds <- predict(   results,   X_Boston[TestSet, ] )  # The 8th element of the results object might contain useful info, like variable importance # For this example, we just display it cat(\"In-Sample RMSE:\", results$inSampleRmse, \"\\n\") #> In-Sample RMSE: 1.182148  # Calculate the Root Mean Squared Error (RMSE) rmse <- sqrt(mean((Y_Boston[TestSet] - preds)^2)) cat(\"Test Set RMSE:\", rmse, \"\\n\") #> Test Set RMSE: 3.206674"},{"path":"https://johnpaulgosling.github.io/AddiVortes/articles/introduction.html","id":"visualising-the-results","dir":"Articles","previous_headings":"","what":"5. Visualising the Results","title":"Introduction to AddiVortes","text":"Finally, good way assess model plot predicted values true values. perfect model, points lie equality line (y = x). also plot prediction intervals visualise model’s uncertainty.","code":"# Plot true values vs. predicted values plot(Y_Boston[TestSet],      preds,      xlab = \"True Values\",      ylab = \"Predicted Values\",      main = \"AddiVortes Predictions vs True Values\",      xlim = range(c(Y_Boston[TestSet], preds)),      ylim = range(c(Y_Boston[TestSet], preds)),      pch = 19, col = \"darkblue\" )  # Add the line of equality (y = x) for reference abline(a = 0, b = 1, col = \"darkred\", lwd = 2)  # Get quantile predictions to create error bars/intervals preds_quantile <- predict(   results,   X_Boston[TestSet, ],   \"quantile\" )  # Add error segments for each prediction for (i in 1:nrow(preds_quantile)) {   segments(Y_Boston[TestSet][i], preds_quantile[i, 1],            Y_Boston[TestSet][i], preds_quantile[i, 2],            col = \"darkblue\", lwd = 1   ) } legend(\"topleft\", legend=c(\"Prediction\", \"y=x Line\", \"95% Interval\"),         col=c(\"darkblue\", \"darkred\", \"darkblue\"),        lty=1, pch=c(19, NA, NA), lwd=2)"},{"path":"https://johnpaulgosling.github.io/AddiVortes/articles/prediction.html","id":"generating-a-synthetic-dataset","dir":"Articles","previous_headings":"","what":"1. Generating a synthetic dataset","title":"Prediction with AddiVortes","text":"start creating 5-dimensional dataset. response variable Y determined simple rule based first two predictors, X[,1] X[,2], plus random noise. allows us know “true” data-generating process, useful evaluating model.","code":"# Load the package library(AddiVortes)  # --- Generate Training Data --- set.seed(42) # for reproducibility  # Create a 5-column matrix of predictors X <- matrix(runif(2500), ncol = 5) X[,1] <- -10 - X[,1] * 10 X[,2] <- X[,2] * 100 X[,3] <- -9 + X[,3] * 10 X[,4] <- 8 + X[,4] X[,5] <- X[,5] * 10  # Create the response 'Y' based on a rule and add noise Y_underlying <- ifelse(-1 * X[,2] > 10 * X[,1] + 100, 10, 0) Y <- Y_underlying + rnorm(length(Y_underlying))  # Visualise the relationships in the data # The colours show the two underlying groups pairs(X,        col = ifelse(Y_underlying == 10, \"red\", \"blue\"),       pch = 19, cex = 0.5,       main = \"Structure of Predictor Variables\")"},{"path":"https://johnpaulgosling.github.io/AddiVortes/articles/prediction.html","id":"fitting-the-addivortes-model","dir":"Articles","previous_headings":"","what":"2. Fitting the AddiVortes Model","title":"Prediction with AddiVortes","text":"Next, fit AddiVortes model training data. example, ’ll use small number trees (m=50) quick demonstration. -sample RMSE gives us idea well model fits data trained . However, true test model performance new data.","code":"# Fit the model AModel <- AddiVortes(Y, X, m = 50) # We can check the in-sample Root Mean Squared Error cat(\"In-sample RMSE:\", AModel$inSampleRmse, \"\\n\") #> In-sample RMSE: 0.8454648"},{"path":"https://johnpaulgosling.github.io/AddiVortes/articles/prediction.html","id":"out-of-sample-prediction","dir":"Articles","previous_headings":"","what":"3. Out-of-Sample Prediction","title":"Prediction with AddiVortes","text":"evaluate model’s predictive power, generate new “--sample” test set using process . use predict() method fitted model (AModel) get predictions new data.","code":"# --- Generate Test Data --- set.seed(101) # Use a different seed for the test set testX <- matrix(runif(1000), ncol = 5) testX[,1] <- -10 - testX[,1] * 10 testX[,2] <- testX[,2] * 100 testX[,3] <- -9 + testX[,3] * 10 testX[,4] <- 8 + testX[,4] testX[,5] <- testX[,5] * 10  # Create the true test response values testY_underlying <- ifelse(-1 * testX[,2] > 10 * testX[,1] + 100, 10, 0) testY <- testY_underlying + rnorm(length(testY_underlying))  # --- Make Predictions --- # Predict the mean response preds <- predict(AModel, testX)  # Predict the 90% credible interval (from 0.05 to 0.95 quantiles) preds_q <- predict(AModel, testX, \"quantile\", c(0.05, 0.95))"},{"path":"https://johnpaulgosling.github.io/AddiVortes/articles/prediction.html","id":"visualising-prediction-performance","dir":"Articles","previous_headings":"","what":"4. Visualising Prediction Performance","title":"Prediction with AddiVortes","text":"plot effective way visualise model’s performance. plot observed values test set model’s predicted mean values. red lines plot represent true, underlying mean values (0 10) data-generating process. good model produce predictions cluster around lines. blue vertical segments represent 90% credible intervals prediction, giving us sense model’s uncertainty.  plot shows model successfully learned underlying structure data predictions clustering correctly around true mean values 0 10.","code":"# Plot observed vs. predicted values plot(testY,      preds,      xlab = \"Observed Values\",      ylab = \"Predicted Mean Values\",      main = \"Out-of-Sample Prediction Performance\",      xlim = range(c(testY, preds_q)),      ylim = range(c(testY, preds_q)),      pch = 19, col = \"darkblue\" )  # Add error lines for the 90% credible interval for (i in 1:nrow(preds_q)) {   segments(testY[i], preds_q[i, 1],            testY[i], preds_q[i, 2],            col = rgb(0, 0, 0.5, 0.5), lwd = 1.5   ) }  # Add lines showing the true underlying means lines(c(min(testY)-0.2, 3), c(0, 0), col = \"pink\", lwd = 3, lty = 2) lines(c(7, max(testY)+0.2), c(10, 10), col = \"pink\", lwd = 3, lty = 2)  # Add a legend legend(\"bottomright\",        legend = c(\"Predicted Mean & 90% Interval\", \"True Underlying Mean\"),        col = c(\"darkblue\", \"pink\"),        pch = c(19, NA),        lty = c(1, 2),        lwd = c(1.5, 3),        bty = \"n\" )"},{"path":"https://johnpaulgosling.github.io/AddiVortes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adam Stone. Author, maintainer. John Paul Gosling. Author.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stone , Gosling J (2025). AddiVortes: (Bayesian) Additive Voronoi Tessellations. R package version 0.1.20, https://johnpaulgosling.github.io/AddiVortes/.","code":"@Manual{,   title = {AddiVortes: (Bayesian) Additive Voronoi Tessellations},   author = {Adam Stone and John Paul Gosling},   year = {2025},   note = {R package version 0.1.20},   url = {https://johnpaulgosling.github.io/AddiVortes/}, }"},{"path":"https://johnpaulgosling.github.io/AddiVortes/index.html","id":"addivortes","dir":"","previous_headings":"","what":"(Bayesian) Additive Voronoi Tessellations","title":"(Bayesian) Additive Voronoi Tessellations","text":"Implementing AddiVortes model R. package allows fitting evaluation AddiVortes model described Stone Gosling (2025).","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"(Bayesian) Additive Voronoi Tessellations","text":"can install latest version AddiVortes GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"johnpaulgosling/AddiVortes\")"},{"path":"https://johnpaulgosling.github.io/AddiVortes/index.html","id":"cite-us","dir":"","previous_headings":"","what":"Cite us","title":"(Bayesian) Additive Voronoi Tessellations","text":"use package work, please cite using latest citation information:","code":"citation(\"AddiVortes\")"},{"path":"https://johnpaulgosling.github.io/AddiVortes/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"(Bayesian) Additive Voronoi Tessellations","text":"Stone, . Gosling, J.P. (2025). AddiVortes: (Bayesian) additive Voronoi tessellations. Journal Computational Graphical Statistics.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/AddiVortes.html","id":null,"dir":"Reference","previous_headings":"","what":"AddiVortes — AddiVortes","title":"AddiVortes — AddiVortes","text":"AddiVortes function Bayesian nonparametric regression model uses tessellation model relationship covariates output values. model uses backfitting algorithm sample posterior distribution output values tessellation. function returns RMSE value test samples.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/AddiVortes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AddiVortes — AddiVortes","text":"","code":"AddiVortes(   y,   x,   m = 200,   totalMCMCIter = 1200,   mcmcBurnIn = 200,   nu = 6,   q = 0.85,   k = 3,   sd = 0.8,   omega = 3,   lambdaRate = 25,   IntialSigma = \"Linear\",   thinning = 1 )"},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/AddiVortes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AddiVortes — AddiVortes","text":"y vector output values. x matrix covariates. m number tessellations. totalMCMCIter number iterations. mcmcBurnIn number burn iterations. nu degrees freedom. q quantile. k number centres. sd standard deviation. omega prior probability adding dimension. lambdaRate rate Poisson distribution number centres. IntialSigma method used calculate initial variance. thinning thinning rate.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/AddiVortes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AddiVortes — AddiVortes","text":"AddiVortesFit object containing posterior samples tessellations, dimensions predictions.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/new_AddiVortesFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an AddiVortesFit Object — new_AddiVortesFit","title":"Create an AddiVortesFit Object — new_AddiVortesFit","text":"constructor AddiVortesFit class.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/new_AddiVortesFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an AddiVortesFit Object — new_AddiVortesFit","text":"","code":"new_AddiVortesFit(   posteriorTess,   posteriorDim,   posteriorPred,   xCentres,   xRanges,   yCentre,   yRange,   inSampleRmse )"},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/new_AddiVortesFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an AddiVortesFit Object — new_AddiVortesFit","text":"posteriorTess list posterior samples tessellations. posteriorDim list posterior samples dimensions. posteriorPred list posterior samples predictions. xCentres centres covariates. xRanges ranges covariates. yCentre centre output values. yRange range output values. inSampleRmse -sample RMSE.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/new_AddiVortesFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an AddiVortesFit Object — new_AddiVortesFit","text":"object class AddiVortesFit.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/plot.AddiVortesFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Method for AddiVortesFit — plot.AddiVortesFit","title":"Plot Method for AddiVortesFit — plot.AddiVortesFit","text":"Generates diagnostic plots fitted AddiVortesFit object. function creates scatter plot true versus predicted values training set help visualise model fit.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/plot.AddiVortesFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Method for AddiVortesFit — plot.AddiVortesFit","text":"","code":"# S3 method for class 'AddiVortesFit' plot(aModel, x_train, y_train, ...)"},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/plot.AddiVortesFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Method for AddiVortesFit — plot.AddiVortesFit","text":"aModel object class AddiVortesFit, typically result call AddiVortes(). x_train matrix original training covariates. y_train numeric vector original training true outcomes. ... Additional graphical parameters passed plot function (e.g., pch, cex).","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/plot.AddiVortesFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Method for AddiVortesFit — plot.AddiVortesFit","text":"function called side effect creating plot returns NULL invisibly.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/plot.AddiVortesFit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Method for AddiVortesFit — plot.AddiVortesFit","text":"function internally calls predict.AddiVortesFit provided training data get mean predictions. plots predictions true outcome values (y_train). dashed red line intercept 0 slope 1 added plot represent perfect prediction, making easy assess model's accuracy.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/plot.AddiVortesFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Method for AddiVortesFit — plot.AddiVortesFit","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'fit' is a trained object of class AddiVortesFit, # and 'x_train_data', 'y_train_data' are your training datasets.  plot(fit, x_train = x_train_data, y_train = y_train_data) } # }"},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/predict.AddiVortesFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Method for AddiVortesFit — predict.AddiVortesFit","title":"Predict Method for AddiVortesFit — predict.AddiVortesFit","text":"Predicts outcomes new data using fitted AddiVortesFit model object. can return mean predictions, quantiles optionally calculate Root Mean Squared Error (RMSE) true outcomes provided.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/predict.AddiVortesFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Method for AddiVortesFit — predict.AddiVortesFit","text":"","code":"# S3 method for class 'AddiVortesFit' predict(   object,   newdata,   type = c(\"response\", \"quantile\"),   quantiles = c(0.025, 0.975),   ... )"},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/predict.AddiVortesFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Method for AddiVortesFit — predict.AddiVortesFit","text":"object object class AddiVortesFit, typically result call AddiVortes(). newdata matrix covariates new test set. number columns must match original training data. type type prediction required. default \"response\" gives mean prediction. alternative \"quantile\" returns quantiles specified quantiles argument. quantiles numeric vector probabilities values 0, 1 compute predictions type = \"quantile\". ... arguments passed methods (currently unused).","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/predict.AddiVortesFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Method for AddiVortesFit — predict.AddiVortesFit","text":"type = \"response\", numeric vector mean predictions. type = \"quantile\", matrix row corresponds observation newdata column quantile.","code":""},{"path":"https://johnpaulgosling.github.io/AddiVortes/reference/predict.AddiVortesFit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict Method for AddiVortesFit — predict.AddiVortesFit","text":"function relies internal helper function applyScaling_internal available environment, used main AddiVortes function.","code":""}]
